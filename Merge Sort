#include<bits/stdc++.h>
using namespace std;
void mergeFunc(int a[], int size, int l, int r, int mid){
    int temp[size]; // created a temporary array
    int i = l;          // creating and initialising variables
    int j = mid +1;
    int k = l;
    while(i <= mid && j <= r){
        if(a[i] <= a[j]){
            temp[k] = a[i];
            i++; 
            k++;
        }
        else{
            temp[k] = a[j];
            j++; 
            k++;
        }
    }
    while(i <=mid){
        temp[k] = a[i];
        i++; 
        k++;
    }
    while( j <= r){
        temp[k] = a[j];
        j++; 
        k++;
    }
    for(int p= l; p <= r; ++p){
        a[p] = temp[p];
    }


}
void mergeSort(int a[], int size, int l, int r){
    if(l < r){
        int mid = (l+r)/2;    // calculating mid point
        mergeSort(a, size, l, mid); // calling the func recursively for the left sub-array
        mergeSort(a, size, mid + 1, r); // same as well for the right sub-array
        mergeFunc(a, size, l, r, mid);

    }
}


int main(){
    int size;
    cout<<"Enter your array size: \n";
    cin>>size;
    int arr[size];
    cout<<"Enter array elements: \n";
    for(int i=0; i < size; ++i){
        cin>>arr[i];
    }
    cout<<"That's your UNSORTED array: "<<endl;
    for(int i = 0; i<size; i++){
        cout<<arr[i]<< " ";
    }
    mergeSort(arr, size, 0, size-1);
    cout<<"\nThat's your SORTED array: "<<endl;
    for(int i = 0; i<size; i++){
        cout<<arr[i]<< " ";
    }

}
